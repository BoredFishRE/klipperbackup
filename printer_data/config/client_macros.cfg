#
# This is an example (but working) macro to park toolhead out of the way of print
# You can also use your existing
#
[gcode_macro _PARK]
description: Park toolhead safely away from print
gcode:
    {% set Z_HOP = params.Z_HOP|default(5)|float %}
    {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
    {% set y_park = printer.toolhead.axis_minimum.y|float + 5.0 %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}

    {% if act_z < (max_z - Z_HOP) %}
        {% set z_safe = Z_HOP %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    G91
    G1 Z{z_safe} F900
    G90
    G0 X{x_park} Y{y_park} F6000

#
# This is an example (but working) CANCEL_PRINT macro
# You can also use your existing, but it should follow this pattern
#
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancel print
gcode:
    _PARK Z_HOP=20
    TURN_OFF_HEATERS
    SDCARD_RESET_FILE
    CLEAR_PAUSE
    BASE_CANCEL_PRINT

#
# This is an example (but working) PAUSE macro
# You can also use your existing, but it should follow this pattern
#
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:
  {% if printer.pause_resume.is_paused %}
    RESPOND MSG="Print is already paused"
  {% else %}
    BASE_PAUSE
    G92 E0
    G1 E-1.0 F1500.0	; Retract a little to reduce ooze
    G90
    SAVE_GCODE_STATE NAME=PAUSE_my_state
    _PARK Z_HOP=5
  {% endif %}

#
# This is an example (but working) RESUME macro
# You can also use your existing, but it should follow this pattern
#
[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume the print
gcode:
  {% if not printer.pause_resume.is_paused %}
    RESPOND MSG="Print is not paused, resume aborted"
  {% else %}
    #
    # Good place to add other things like purging or nozzle cleaning
    #
    RESTORE_GCODE_STATE NAME=PAUSE_my_state MOVE=1 MOVE_SPEED=100
    BASE_RESUME
  {% endif %}

[gcode_macro START_PRINT]
gcode: 
  CLEAR_PAUSE
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  G90 ; use absolute coordinates
  M83 ; extruder relative mode
  M104 S150 ; set temporary nozzle temp to prevent oozing during homing and auto bed leveling
  M190 S{BED_TEMP + 3} ; set final bed temp
  G4 S600; heat soak bed
  G28 ; home all axis
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE LOAD=default
  G1 Z50 F240
  G1 X2 Y10 F3000
  M104 S{EXTRUDER_TEMP} ; set final nozzle temp
  M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Move to corner of the bed
    _PARK Z_HOP=20
    # Disable steppers
    M84
    # Beep Boop
    SONG_RICE_COOKER_DONE

[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
        G4 P{dur}
    {% endfor %}
