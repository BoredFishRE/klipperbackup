#[include mmu/base/*.cfg]
#[include mmu/optional/client_macros.cfg]
#[include mmu/optional/mmu_ercf_compat.cfg]
#[include mmu/optional/mmu_menu.cfg]
[include mainsail.cfg]
[include bttebb36.cfg]
[include TEST_SPEED.cfg]
#[include tones.cfg]
#[include timelapse.cfg]
[include client_macros.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

#[include adxlmcu.cfg]
#[include timelapse.cfg]
# This file contains common pin mappings for the BigTreeTech SKR 3.
# To use this config, the firmware should be compiled for the
# STM32H743 with a "128KiB bootloader".

# See docs/Config_Reference.md for a description of parameters.
#
#[bltouch]
#pin_up_touch_mode_reports_triggered: True
#x_offset: 0
#y_offset: -43
#z_offset = 0 #PLA
########################################
# EXP1 / EXP2 (display) pins
########################################


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE9,  EXP1_7=PE11, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE8, EXP1_6=PE10, EXP1_8=PE12, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

[BDsensor] 
# Don't use aliases for the board pins
sda_pin: PE8 # example of connecting to main board Creality V4.2.7
scl_pin: PB1
#scl_pin:MKS_THR:gpio20 # example of connecting to CAN module like MKS THR42 
#sda_pin:MKS_THR:gpio11 
#scl_pin:host:gpio17 # example of connecting to GPIO on RaspberryPi
#sda_pin:host:gpio27
delay: 20 # you can set it 10 if the BDsensor version is >=1.2
z_offset:-0.3 #  within -0.6 to 0.6mm
x_offset: 0
y_offset: -15
no_stop_probe: # fast probe that the toolhead will not stop at the probe point,disable it by commenting out.
position_endstop: 1.2 #the triggered position, recommend value is 1~2.8
collision_homing:0 #  set it 1 to enable homing with nozzle collision sensing.
collision_calibrate:0 # set it 1 to enable auto calibrate BDsensor with nozzle collision sensing.
#QGL_Tilt_Probe:0 #set 1 to enable probe up and down when do quad_gantry_level

[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
description:
gcode:
    #run z tilt with z move up and down at first
    BDSENSOR_SET QGL_TILT_PROBE=1 #set this 1 to enable z axis up and down
    BDSENSOR_SET COLLISION_HOMING=0
    _Z_TILT_ADJUST horizontal_move_z=6 retry_tolerance=1
    G28 Z0
    #run z tilt with no z move up and down
    BDSENSOR_SET QGL_TILT_PROBE=0 #set this 0 to disable z axis up and down while probe
    _Z_TILT_ADJUST horizontal_move_z=1 retry_tolerance=0.04
    #BDSENSOR_SET COLLISION_HOMING=1 #optional
    G28 Z0
    
[bed_mesh]
speed: 500
mesh_min: 15, 20
mesh_max: 225, 175
probe_count: 6, 6
mesh_pps: 2, 3
horizontal_move_z:1 # 0.7~1.0mm is recommended
zero_reference_position: 115, 170 # Set this value to be the same as home_xy_position that is in the section safe_z_home
algorithm: bicubic  # this should be bicubic if the bed mesh points count is > 6*6
bicubic_tension: 0.2

[force_move] 
enable_force_move: true   # required by the command SET_KINEMATIC_POSITION in the calibration step below.

[safe_z_home]
home_xy_position: 115, 115 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[stepper_y]
step_pin: PA15
dir_pin: PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ^PC3
homing_positive_dir: true
position_endstop: 250
position_max: 245
position_min: 0
homing_speed: 100

[stepper_x]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ^PC1
homing_positive_dir: false
position_endstop: 0
position_max: 230
position_min: 0
homing_speed: 100

[stepper_z]
step_pin: PE2
dir_pin: PE3
enable_pin: !PE0
microsteps: 16
rotation_distance: 8
gear_ratio: 42:20
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.5
homing_speed: 5
second_homing_speed: 1  #set this to 3 if homing with collision
homing_retract_speed: 2
homing_retract_dist:5
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree
position_max: 225
position_min: -5

[stepper_z1]
step_pin: PD11
dir_pin: PD10
enable_pin: !PD13
microsteps: 16
rotation_distance: 8
gear_ratio: 42:20
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree

[stepper_z2]
step_pin: PD15
dir_pin: !PD14
enable_pin: !PC7
microsteps: 16
rotation_distance: 8
gear_ratio: 42:20
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree

[z_tilt]
z_positions:
            -25, -15
            260, -15
            115, 250
# A list of X, Y coordinates (one per line; subsequent lines
# indented) describing the location of each bed "pivot point". The
# "pivot point" is the point where the bed attaches to the given Z
# stepper. It is described using nozzle coordinates (the X, Y position
# of the nozzle if it could move directly above the point). The
# first entry corresponds to stepper_z, the second to stepper_z1,
# the third to stepper_z2, etc. This parameter must be provided.
points: 35, 10
        195, 10
        115, 190
# A list of X, Y coordinates (one per line; subsequent lines
# indented) that should be probed during a Z_TILT_ADJUST command.
# Specify coordinates of the nozzle and be sure the probe is above
# the bed at the given nozzle coordinates. This parameter must be
# provided.
speed: 50
# The speed (in mm/s) of non-probing moves during the calibration.
# The default is 50.
#horizontal_move_z: 7
# The height (in mm) that the head should be commanded to move to
# just prior to starting a probe operation. The default is 5.
retries: 10
# Number of times to retry if the probed points aren't within
# tolerance.
retry_tolerance: 0.01
# If retries are enabled then retry if largest and smallest probed
# points differ more than retry_tolerance. Note the smallest unit of
# change here would be a single step. However if you are probing
# more points than steppers then you will likely have a fixed
# minimum value for the range of probed points which you can learn
# by observing command output.

[heater_bed]
heater_pin: PD7
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA1
#pid_kp = 61.223
#pid_ki = 1.529
#pid_kd = 613.000
#control = pid
min_temp: 0
max_temp: 150

#[fan]
#pin: PB6
#max_power: 1.0
#kick_start_time: 0.100


[controller_fan controller_fan]
pin: PB5
heater: heater_bed
shutdown_speed: 1.0


[fan_generic Aux_Fan] 
pin: PB6
max_power: 1.0
shutdown_speed: 1.0
#cycle_time:
#hardware_pwm:
kick_start_time: 0.2
off_below: 0.25
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#[heater_fan hotend_fan]
#pin: PB5

#[heater_fan fan1]
#pin: PB6

#[heater_fan fan2]
#pin: PB5

[mcu]
canbus_uuid: cf1679c7dc06

[mcu EBBCan]
canbus_uuid: 7ee964c6191c

[input_shaper]
shaper_freq_x: 68.8
shaper_type_x: mzv
shaper_freq_y: 65.4
shaper_type_y: mzv

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 5000
max_z_velocity: 25
max_z_accel: 500

[neopixel my_neopixel]
pin: PE6
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 166
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
#initial_WHITE: 1.0
#   See the "led" section for information on these parameters.

[neopixel hotend_rgb]
chain_count: 25
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
#initial_WHITE: 1.0
#   See the "led" section for information on these parameters.

[filament_switch_sensor switch_sensor] 
switch_pin: ^PA0 
pause_on_runout: False 
runout_gcode: PAUSE # [pause_resume] is required in printer.cfg 
  M117 Filament switch runout 
insert_gcode: 
  M117 Filament switch inserted

[filament_motion_sensor encoder_sensor] 
switch_pin: ^PC2 
detection_length: 2.88 # accuracy of motion sensor 2.88mm 
extruder: extruder 
pause_on_runout: False 
runout_gcode: PAUSE # [pause_resume] is required in printer.cfg 
  M117 Filament encoder runout 
insert_gcode: 
  M117 Filament encoder inserted
  
#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points: 100, 100, 20  # an example

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
keep_raw_csv: True
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PD5
run_current: 1.85
interpolate: true

[tmc2209 stepper_y]
uart_pin: PD0
run_current: 1.85
interpolate: true

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.580
hold_current: 0.580

[tmc2209 stepper_z2]
uart_pin: PC6
run_current: 0.580
hold_current: 0.580

[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 0.580
hold_current: 0.580

[autotune_tmc stepper_x]
motor: ldo-42sth48-2804ah
tuning_goal: performance

[autotune_tmc stepper_y]
motor: ldo-42sth48-2804ah
tuning_goal: performance

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.045151, -0.045151, -0.065151, -0.055151, -0.045151, -0.025151
#*# 	  -0.045151, -0.045151, -0.055151, -0.045151, -0.035151, -0.025151
#*# 	  -0.055151, -0.045151, -0.055151, -0.045151, -0.035151, 0.024849
#*# 	  -0.045151, -0.035151, -0.035151, -0.025151, 0.014849, 0.014849
#*# 	  -0.045151, -0.035151, -0.035151, -0.035151, 0.014849, 0.044849
#*# 	  -0.035151, -0.015151, -0.005151, 0.024849, 0.064849, 0.064849
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 225.0
#*# min_y = 20.0
#*# max_y = 175.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.334
#*# pid_ki = 0.751
#*# pid_kd = 1292.658
