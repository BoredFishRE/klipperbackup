#[include mmu/base/*.cfg]
#[include mmu/optional/client_macros.cfg]
#[include mmu/optional/mmu_ercf_compat.cfg]
#[include mmu/optional/mmu_menu.cfg]
[include mainsail.cfg]
#[include bttebb36.cfg]
[include TEST_SPEED.cfg]
[include KAMP_Settings.cfg]
#[include tones.cfg]
#[include timelapse.cfg]
[include client_macros.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

#[include adxlmcu.cfg]
#[include timelapse.cfg]

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_F279730A5154354D38202020FF0A212F-if00 # update with your beacon device (ls /dev/serial/by-id)
y_offset: 31 # update with offset from nozzle on your machine
x_offset: 0 # update with offset from nozzle on your machine
mesh_main_direction:X
mesh_runs: 2
z_settling_time:400
lift_speed:20
speed:10
home_xy_position: 110, 110   # update with the center of your bed
home_z_hop: 5
home_z_hop_speed: 5
home_xy_move_speed: 300

[gcode_macro Z_TILT_ADJUST]
rename_existing: _BASE_Z_TILT_ADJUST
gcode:
    M117 Z_TILT_ADJUST
    {% if printer.configfile.settings.z_tilt %}
        {% if printer._base_z_tilt_adjust.applied == False %}
            _BASE_Z_TILT_ADJUST RETRY_TOLERANCE=1
        {% endif %}
       _BASE_Z_TILT_ADJUST horizontal_move_z=2
    {% endif %}

[exclude_object]

[bed_mesh]
speed: 500
mesh_min: 25, 31
mesh_max: 205, 194
probe_count: 6, 6
mesh_pps: 2, 3
horizontal_move_z:1 # 0.7~1.0mm is recommended
zero_reference_position: 110, 110 # Set this value to be the same as home_xy_position that is in the section safe_z_home
algorithm: bicubic  # this should be bicubic if the bed mesh points count is > 6*6
bicubic_tension: 0.2

[stepper_x] # M0 Driver
high_precision_step_compress: True
enable_pin: !M0_EN
step_pin: M0_STEP
dir_pin: M0_DIR
microsteps: 256
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ^PC1
homing_positive_dir: false
position_endstop: 0
position_max: 230
position_min: 0
homing_speed: 100

[tmc5160 stepper_x]
spi_bus: spi2
cs_pin: M0_CS
diag1_pin: ^!M0_STALL # used for sensorless homing
sense_resistor: 0.05 # CHECK THIS AGAINST YOUR HARDWARE!!!
run_current: 1.85
interpolate: True

[stepper_y] # M1 Driver
high_precision_step_compress: True
enable_pin: !M1_EN
step_pin: M1_STEP
dir_pin: M1_DIR
microsteps: 256
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ^PC3
homing_positive_dir: true
position_endstop: 217
position_max: 217
position_min: 0
homing_speed: 100

[tmc5160 stepper_y]
spi_bus: spi2
cs_pin: M1_CS
diag1_pin: ^!M1_STALL # used for sensorless homing
sense_resistor: 0.05 # CHECK THIS AGAINST YOUR HARDWARE!!!
run_current: 1.85
interpolate: True

[stepper_z]
step_pin: M6_STEP
dir_pin: M6_DIR
enable_pin: !M6_EN
microsteps: 16
rotation_distance: 8.349
gear_ratio: 42:20
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.5
homing_speed: 5
second_homing_speed: 1  #set this to 3 if homing with collision
homing_retract_speed: 2
homing_retract_dist: 0
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree
position_max: 225
position_min: -5

[tmc2209 stepper_z]
uart_pin: M6_UART
interpolate: True
stealthchop_threshold: 999999
run_current: 0.2
hold_current: 0.2
sense_resistor: 0.1

[stepper_z1]
step_pin: M5_STEP
dir_pin: M5_DIR
enable_pin: !M5_EN
microsteps: 16
rotation_distance: 8.349
gear_ratio: 42:20
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 stepper_z1]
uart_pin: M5_UART
interpolate: True
stealthchop_threshold: 999999
run_current: 0.2
hold_current: 0.2
sense_resistor: 0.1

[stepper_z2]
step_pin: M4_STEP
dir_pin: M4_DIR
enable_pin: !M4_EN
microsteps: 16
rotation_distance: 8.349
gear_ratio: 42:20
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 stepper_z2] # M4 Driver
uart_pin: M4_UART
interpolate: True
stealthchop_threshold: 999999
run_current: 0.2
hold_current: 0.2
sense_resistor: 0.1

[autotune_tmc stepper_x]
motor: ldo-42sth48-2804ah
tuning_goal: performance

[autotune_tmc stepper_y]
motor: ldo-42sth48-2804ah
tuning_goal: performance
[z_tilt]
z_positions:
            -25, -15
            260, -15
            115, 250
# A list of X, Y coordinates (one per line; subsequent lines
# indented) describing the location of each bed "pivot point". The
# "pivot point" is the point where the bed attaches to the given Z
# stepper. It is described using nozzle coordinates (the X, Y position
# of the nozzle if it could move directly above the point). The
# first entry corresponds to stepper_z, the second to stepper_z1,
# the third to stepper_z2, etc. This parameter must be provided.
points: 35, 0
        195, 0
        115, 160
# A list of X, Y coordinates (one per line; subsequent lines
# indented) that should be probed during a Z_TILT_ADJUST command.
# Specify coordinates of the nozzle and be sure the probe is above
# the bed at the given nozzle coordinates. This parameter must be
# provided.
speed: 50
# The speed (in mm/s) of non-probing moves during the calibration.
# The default is 50.
#horizontal_move_z: 7
# The height (in mm) that the head should be commanded to move to
# just prior to starting a probe operation. The default is 5.
retries: 10
# Number of times to retry if the probed points aren't within
# tolerance.
retry_tolerance: 0.01
# If retries are enabled then retry if largest and smallest probed
# points differ more than retry_tolerance. Note the smallest unit of
# change here would be a single step. However if you are probing
# more points than steppers then you will likely have a fixed
# minimum value for the range of probed points which you can learn
# by observing command output.
################################
## Corevus-G v0.6 thermistors ##
################################

[thermistor CvBoardTherm]
temperature1: 25.0
resistance1: 10000.0
beta: 3950

[temperature_sensor M1_Driver] # TMC2160
sensor_type: CvBoardTherm
sensor_pin: M1_THERM
min_temp: -20
max_temp: 85

[temperature_sensor M4_Driver] # TMC2209
sensor_type: CvBoardTherm
sensor_pin: M4_THERM
min_temp: -20
max_temp: 85

[temperature_sensor 12V]
sensor_type: CvBoardTherm
sensor_pin: 12V_THERM
min_temp: -20
max_temp: 85

[temperature_sensor 5V]
sensor_type: CvBoardTherm
sensor_pin: 5V_THERM
min_temp: -20
max_temp: 85
[heater_bed]
heater_pin: PD7
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA1
#pid_kp = 61.223
#pid_ki = 1.529
#pid_kd = 613.000
#control = pid
min_temp: 0
max_temp: 150

#[fan]
#pin: PB6
#max_power: 1.0
#kick_start_time: 0.100


[controller_fan controller_fan]
pin: F3
heater: heater_bed
shutdown_speed: 1.0


[fan_generic Aux_Fan] 
pin: F2
max_power: 1.0
shutdown_speed: 1.0
#cycle_time:
#hardware_pwm:
kick_start_time: 0.2
off_below: 0.25
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#[heater_fan hotend_fan]
#pin: PB5

#[heater_fan fan1]
#pin: PB6

#[heater_fan fan2]
#pin: PB5

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_130026000F51323431333839-if00
#   The serial port to connect to the MCU. If unsure (or if it
#   changes) see the "Where's my serial port?" section of the FAQ.
#   This parameter must be provided when using a serial port.
#baud: 250000
#   The baud rate to use. The default is 250000.
#canbus_uuid:
#   If using a device connected to a CAN bus then this sets the unique
#   chip identifier to connect to. This value must be provided when using
#   CAN bus for communication.
#canbus_interface:
#   If using a device connected to a CAN bus then this sets the CAN
#   network interface to use. The default is 'can0'.
#restart_method:
#   This controls the mechanism the host will use to reset the
#   micro-controller. The choices are 'arduino', 'cheetah', 'rpi_usb',
#   and 'command'. The 'arduino' method (toggle DTR) is common on
#   Arduino boards and clones. The 'cheetah' method is a special
#   method needed for some Fysetc Cheetah boards. The 'rpi_usb' method
#   is useful on Raspberry Pi boards with micro-controllers powered
#   over USB - it briefly disables power to all USB ports to
#   accomplish a micro-controller reset. The 'command' method involves
#   sending a Klipper command to the micro-controller so that it can
#   reset itself. The default is 'arduino' if the micro-controller
#   communicates over a serial port, 'command' otherwise.


[input_shaper]
shaper_type: smooth_zv
#   A type of the input shaper to use for both X and Y axes. Supported
#   shapers are smooth_zv, smooth_mzv, smooth_ei, smooth_2hump_ei, smooth_zvd_ei,
#   smooth_si, mzv, ei, 2hump_ei.
#shaper_type_x:
#shaper_type_y:
#   If shaper_type is not set, these two parameters can be used to
#   configure different input shapers for X and Y axes. The same
#   values are supported as for shaper_type parameter.
smoother_freq_x: 62.8
#  A frequency (in Hz) of the smooth input shaper for X axis.
smoother_freq_y: 61.2
#  A frequency (in Hz) of the smooth input shaper for Y axis.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers
#   to improve vibration suppression. Default value is 0.1 which is a
#   good all-round value for most printers. In most circumstances this
#   parameter requires no tuning and should not be changed.
#   Note: Damping ratios are not currently supported for input smoothers.

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 5000
max_z_velocity: 25
max_z_accel: 500

#[neopixel my_neopixel]
#pin: PE6
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count: 31
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
#initial_RED: 1.0
#initial_GREEN: 1.0
#initial_BLUE: 1.0
#initial_WHITE: 1.0
#   See the "led" section for information on these parameters.

#[neopixel hotend_rgb]
#chain_count: 25
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
#initial_RED: 1.0
#initial_GREEN: 1.0
#initial_BLUE: 1.0
#initial_WHITE: 1.0
#   See the "led" section for information on these parameters.

#[filament_switch_sensor switch_sensor] 
#switch_pin: ^PA0 
#pause_on_runout: False 
#runout_gcode: PAUSE # [pause_resume] is required in printer.cfg 
#  M117 Filament switch runout 
#insert_gcode: 
#  M117 Filament switch inserted
  
#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: beacon
#probe_points: 113, 110, 20  # an example

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
keep_raw_data: True
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

########################################
# TMC2209 configuration
########################################

[board_pins Corevus-G-v0.6] # MUST MATCH YOUR COREVUS HARDWARE
mcu: mcu
aliases:
# TMC2160 drivers
	M0_STEP = PG8,  M0_DIR = PG7, M0_EN = PG5,  M0_CS = PG6, M0_STALL = PG4,
	M1_STEP = PD15, M1_DIR = PG2, M1_EN = PD14, M1_CS = PG3, M1_STALL = PD13,
# Driver expansion ports
	M2A_STEP = PB12, M2A_DIR = PE12, M2A_EN = PE13, M2A_CS = PE14, M2A_STALL = PE15, M2A_UART = PE14,
	M2B_STEP = PD12, M2B_DIR = PD11, M2B_EN = PD10, M2B_CS = PD9,  M2B_STALL = PD8, M2B_UART = PD9,
	M3A_STEP = PF13, M3A_DIR = PF14, M3A_EN = PF15, M3A_CS = PG1,  M3A_STALL = PG0, M3A_UART = PG1,
	M3B_STEP = PE11, M3B_DIR = PE10, M3B_EN = PE9,  M3B_CS = PE8,  M3B_STALL = PE7, M3B_UART = PE8,
# TMC2209 drivers
	M4_STEP = PF11, M4_DIR = PC4,  M4_EN = PC5,  M4_UART = PF12,
	M5_STEP = PF3,  M5_DIR = PF1,  M5_EN = PF2,  M5_UART = PF4,
	M6_STEP = PC15, M6_DIR = PC13, M6_EN = PC14, M6_UART = PF0,
	M7_STEP = PE4,  M7_DIR = PE2,  M7_EN = PE3,  M7_UART = PE5,
# Heaters
	HB = PC6, H0 = PC7, H1 = PC8, H2 = PC9, H3 = PA8,
# Fans
	F0 = PB4, F1 = PB3, F0_FG = PC11, F1_FG = PC10,
	F2 = PB5, F3 = PG12, F4 = PA10, 
    F5 = PB6, F6 = PG13, F7 = PA15, 
    F8 = PB9, F9 = PB8, F10 = PE6, F11 = PB7,
# Thermistors
	T0 = PF10, T1 = PA1, T2 = PC2, T3 = PC3,
	T4 = PC0, T5 = PC1, T6 = PF5, T7 = PF6,
	M1_THERM = PB1, M2_THERM = PB0, M3_THERM = PF9,
	M4_THERM = PA4, 5V_THERM = PF7, 12V_THERM = PF8,
# Endstops
	S0 = PG10, S1 = PG15, S2 = PE0, S3 = PE1
  
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.045151, -0.045151, -0.065151, -0.055151, -0.045151, -0.025151
#*# 	-0.045151, -0.045151, -0.055151, -0.045151, -0.035151, -0.025151
#*# 	-0.055151, -0.045151, -0.055151, -0.045151, -0.035151, 0.024849
#*# 	-0.045151, -0.035151, -0.035151, -0.025151, 0.014849, 0.014849
#*# 	-0.045151, -0.035151, -0.035151, -0.035151, 0.014849, 0.044849
#*# 	-0.035151, -0.015151, -0.005151, 0.024849, 0.064849, 0.064849
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 225.0
#*# min_y = 20.0
#*# max_y = 175.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.334
#*# pid_ki = 0.751
#*# pid_kd = 1292.658
#*#
#*# [telemetry]
#*# enabled = True
#*#
#*# [beacon model default]
#*# model_coef = 1.5683316945470762,
#*# 	  1.9571945797795525,
#*# 	  0.904135754491113,
#*# 	  0.3255898708423152,
#*# 	  0.15863045268775042,
#*# 	  0.5673978889865852,
#*# 	  -0.2199255065501696,
#*# 	  -0.9571899592227809,
#*# 	  0.18576288361388762,
#*# 	  0.5124883750288778
#*# model_domain = 1.8591069331755583e-07,1.931667784892823e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 25.208212
#*# model_offset = 0.00000
